apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 3
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: 'postgres:17'
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: postgres
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgresdata
      volumes:
        - name: postgresdata
          persistentVolumeClaim:
            claimName: postgres-volume-claim
        - name: init-scripts
          configMap:
            name: postgres-init-scripts
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-clusterip-srv
spec:
  type: ClusterIP
  selector:
    app: postgres 
  ports:
    - name: postgres
      protocol: TCP
      port: 5432
      targetPort: 5432
--- #create a loadbalancer to access database from the computer
apiVersion: v1
kind: Service
metadata:
  name: postgres-loadbalancer
spec:
  type: LoadBalancer
  selector:
    app: postgres
  ports:
    -  protocol: TCP
       port: 5432
       targetPort: 5432